from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


start_menu_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton("‚öô –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SSH", callback_data="configure")]
    ]
)


def generate_configuration_menu_keyboard(
        hostname: str = None, port: str = None, username: str = None, password: str = None,
) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SSH-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º."""
    configuration = locals()
    options_buttons = [
        InlineKeyboardButton(f"{'–ò–∑–º–µ–Ω–∏—Ç—å' if value else '‚ûï –î–æ–±–∞–≤–∏—Ç—å'} {option}", callback_data=f"{option}_option")
        for option, value in configuration.items()
    ]
    configuration_keyboard = InlineKeyboardMarkup(row_width=1).add(*options_buttons)
    if any(configuration.values()):
        configuration_keyboard.add(InlineKeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å", callback_data="reset"))
    configuration_keyboard.add(
        InlineKeyboardButton(f"{'üë®üèª‚Äçüíª' if all(configuration.values()) else 'üö´'} –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è", callback_data="connect")
    )
    return configuration_keyboard
